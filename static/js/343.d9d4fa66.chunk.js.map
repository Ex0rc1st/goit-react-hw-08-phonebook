{"version":3,"file":"static/js/343.d9d4fa66.chunk.js","mappings":"mQAEaA,EAAOC,EAAAA,GAAAA,KAAH,2FAGD,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGJC,EAAQJ,EAAAA,GAAAA,MAAH,0UAKC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEE,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,KAAnB,IACV,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAMK,UAAUC,CAAtB,IACG,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,MAAMC,MAAlB,IAQPC,EAAYX,EAAAA,GAAAA,KAAH,+GAIH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPS,EAAQZ,EAAAA,GAAAA,MAAH,4NAYLa,EAAeb,EAAAA,GAAAA,EAAH,gIAGd,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOS,KAAnB,IACO,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACL,SAAAF,GAAC,OAAIA,EAAEC,MAAMK,UAAUC,CAAtB,IAGHO,EAASf,EAAAA,GAAAA,OAAH,yhB,SCzCNgB,EAAY,WAAO,IAAD,IACvBC,GAAWC,EAAAA,EAAAA,MACjB,GAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,aACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,SACaC,EAJf,EAIEC,UAAaD,OAQf,OACE,UAACxB,EAAD,CAAM0B,SAAUL,GAND,SAAAM,GACfT,GAASU,EAAAA,EAAAA,IAAMD,IACfL,GACD,IAGC,WACE,UAACT,EAAD,YACE,SAACD,EAAD,qBACA,SAACP,GAAD,QACEwB,KAAK,QACLC,WAAS,GACLP,EAAS,QAAS,CACpBQ,UAAU,MAGU,cAAvB,UAAAP,EAAOQ,aAAP,eAAcH,QACb,SAACf,EAAD,CAAcmB,KAAK,QAAnB,mCAGJ,UAACpB,EAAD,YACE,SAACD,EAAD,wBACA,SAACP,GAAD,QACEwB,KAAK,YACDN,EAAS,WAAY,CACvBQ,UAAU,MAGa,cAA1B,UAAAP,EAAOU,gBAAP,eAAiBL,QAChB,SAACf,EAAD,CAAcmB,KAAK,QAAnB,sCAGJ,SAACjB,EAAD,CAAQa,KAAK,SAAb,sBAGL,E,oBCzCD,EAXc,WACZ,OACE,UAAC,KAAD,YACE,SAACM,EAAA,EAAD,WACE,wCAEF,SAAClB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.space[4]}px;\n`;\n\nexport const Input = styled.input`\n  width: 260px;\n  height: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  background-color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  border-radius: ${p => p.theme.radii.normal};\n\n  :focus {\n    border: 2px solid #337ab7;\n    outline: none;\n  }\n`;\n\nexport const LabelName = styled.span`\n  margin-left: auto;\n  margin-right: auto;\n  color: black;\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  color: black;\n  transition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  :focus-within {\n    color: #337ab7;\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  margin-left: auto;\n  margin-right: auto;\n  color: ${p => p.theme.colors.error};\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n\nexport const Button = styled.button`\n  display: block;\n\n  min-width: 150px;\n  height: 40px;\n  border: 0px solid transparent;\n  border-radius: 4px;\n\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  margin-bottom: 25px;\n\n  color: #fff;\n  background-color: #2196f3;\n\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n\n  opacity: 1;\n\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    opacity: 0.8;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  LabelName,\n  ErrorMessage,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    reset,\n    register,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    dispatch(logIn(data));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Label>\n        <LabelName>Email</LabelName>\n        <Input\n          type=\"email\"\n          autoFocus\n          {...register('email', {\n            required: true,\n          })}\n        />\n        {errors.email?.type === 'required' && (\n          <ErrorMessage tole=\"alert\">email is required</ErrorMessage>\n        )}\n      </Label>\n      <Label>\n        <LabelName>Password</LabelName>\n        <Input\n          type=\"password\"\n          {...register('password', {\n            required: true,\n          })}\n        />\n        {errors.password?.type === 'required' && (\n          <ErrorMessage tole=\"alert\">password is required</ErrorMessage>\n        )}\n      </Label>\n      <Button type=\"submit\">Log In</Button>\n    </Form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet';\nimport { Container } from 'components/AppBar/AppBar.styled';\n\nconst Login = () => {\n  return (\n    <Container>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["Form","styled","p","theme","space","Input","colors","white","fontSizes","l","radii","normal","LabelName","Label","ErrorMessage","error","Button","LoginForm","dispatch","useDispatch","useForm","handleSubmit","reset","register","errors","formState","onSubmit","data","logIn","type","autoFocus","required","email","tole","password","Helmet"],"sourceRoot":""}