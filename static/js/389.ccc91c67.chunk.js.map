{"version":3,"file":"static/js/389.ccc91c67.chunk.js","mappings":"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","sources":["utils/validationSchema.js","components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/PhoneBook/PhoneBook.styled.js","components/PhoneBook/PhoneBook.js","pages/Contacts.js"],"sourcesContent":["export const letersRegex =\n  /^([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00f6\\u00f8-\\u00ff\\u0400-\\u04ff\\s]*)$/gi;\n\nexport const numberRedex = /^NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  /* display: flex; */\n  padding: 10px;\n  /* align-items: center; */\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 260px;\n  height: 20px;\n  /* margin-left: auto; */\n  /* margin-right: auto; */\n  margin-bottom: ${p => p.theme.space[4]}px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  background-color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  border-radius: ${p => p.theme.radii.normal};\n\n  :focus {\n    border: 2px solid #337ab7;\n    outline: none;\n  }\n`;\n\nexport const Wraper = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: black;\n  transition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  :focus-within {\n    color: #337ab7;\n  }\n`;\n\nexport const LabelName = styled.span`\n  color: black;\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const ErrorMessage = styled.p`\n  color: ${p => p.theme.colors.error};\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n\nexport const Button = styled.button`\n  display: block;\n\n  min-width: 150px;\n  height: 40px;\n  border: 0px solid transparent;\n  border-radius: 4px;\n\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  margin-bottom: 25px;\n\n  color: #fff;\n  background-color: #2196f3;\n\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n\n  opacity: 1;\n\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    opacity: 0.8;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getFilters = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { letersRegex, numberRedex } from '../../utils/validationSchema';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Form,\n  Wraper,\n  Input,\n  LabelName,\n  ErrorMessage,\n  Button,\n} from './ContactForm.styled';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ defaultValues: { name: '', number: '' } });\n\n  const getContact = data => {\n    const { name } = data;\n\n    const contactsList = contacts.map(({ name }) => name.toLowerCase());\n\n    if (contactsList.includes(name.toLowerCase())) {\n      reset();\n      return toast.warning(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact(data));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(getContact)} autoComplete=\"off\">\n      <Wraper>\n        <LabelName>Name</LabelName>\n        <Input\n          {...register('name', {\n            required: true,\n            pattern: letersRegex,\n            minLength: 3,\n          })}\n          placeholder=\"Contact name\"\n          autoFocus\n        />\n        {errors.name?.type === 'pattern' && (\n          <ErrorMessage tole=\"alert\">\n            The name should have only english alphabets\n          </ErrorMessage>\n        )}\n        {errors.name?.type === 'required' && (\n          <ErrorMessage role=\"alert\">contact name is required</ErrorMessage>\n        )}\n        {errors.name?.type === 'minLength' && (\n          <ErrorMessage role=\"alert\">\n            contact name must be at least 3 letters\n          </ErrorMessage>\n        )}\n      </Wraper>\n      <Wraper>\n        <LabelName> Number</LabelName>\n        <Input\n          {...register('number', {\n            required: true,\n            pattern: numberRedex,\n          })}\n          placeholder=\"Phone number\"\n        />\n        {errors.number?.type === 'pattern' && (\n          <ErrorMessage tole=\"alert\">\n            The number should have digits only\n          </ErrorMessage>\n        )}\n        {errors.number?.type === 'required' && (\n          <ErrorMessage role=\"alert\">contact number is required</ErrorMessage>\n        )}\n      </Wraper>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-around;\n\n  flex-basis: calc(100% / 1 - 15px);\n  padding: 15px 5px;\n  border: 1px solid #d4d4d4;\n\n  text-align: center;\n\n  margin-left: 15px;\n  margin-top: 15px;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: rgb(33 150 243 / 10%);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  margin-left: -15px;\n  margin-top: -15px;\n  margin-top: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[5]}px;\n`;\n\nexport const Button = styled.button`\n  font-weight: ${p => p.theme.fontWeight.bold};\n  border-radius: ${p => p.theme.radii.normal};\n  margin-left: auto;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-top: ${p => p.theme.space[1]}px;\n  padding-bottom: ${p => p.theme.space[1]}px;\n  cursor: pointer;\n  border: none;\n  background-color: ${p => p.theme.colors.btnBg};\n  color: ${p => p.theme.colors.white};\n  transition: all 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.btnHover};\n    box-shadow: 2px 2px 5px 2px rgba(0, 0, 0, 0.75);\n    color: red;\n  }\n`;\n\nexport const PhoneName = styled.p`\n  display: inline-flex;\n  margin-left: ${p => p.theme.space[4]}px;\n`;\n\nexport const PhoneNumber = styled.p`\n  display: inline-flex;\n`;\n","import { HiPhone } from 'react-icons/hi';\nimport Box from 'components/Box';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilters } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport {\n  Item,\n  List,\n  PhoneName,\n  PhoneNumber,\n  Button,\n} from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilters);\n  const filtredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <List>\n      {filtredContacts.map(({ name, number, id }) => (\n        <Item key={id}>\n          <HiPhone style={{ color: '#337ab7' }} />\n          <PhoneName>{name}</PhoneName>\n\n          <Box display=\"flex\" ml=\"auto\" width=\"250px\">\n            <PhoneNumber>{number}</PhoneNumber>\n            <Button type=\"button\" onClick={() => handleDeleteContact(id)}>\n              X\n            </Button>\n          </Box>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const ContactsTitleWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 15px;\n\n  color: #333232;\n`;\n\nexport const InputText = styled.p`\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Input = styled.input`\n  width: 260px;\n  height: 20px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  background-color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  border-radius: ${p => p.theme.radii.normal};\n\n  :focus {\n    border: 2px solid #337ab7;\n    outline: none;\n  }\n`;\n","import { Input, InputText, ContactsTitleWrapper } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactsTitleWrapper>\n      <InputText>Find contact by name</InputText>\n      <Input onChange={e => dispatch(changeFilter(e.target.value))} />\n    </ContactsTitleWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const PhoneContactTitle = styled.h1`\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  color: #2196f3;\n\n  text-align: center;\n`;\n\nexport const ContactListTitle = styled.h2`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  color: #2196f3;\n\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Notice = styled.p`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 700;\n  color: red;\n  text-shadow: ${p => p.theme.shadows.noticeShadow};\n`;\n","import 'react-toastify/dist/ReactToastify.css';\nimport Box from 'components/Box';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FadeLoader from 'react-spinners/FadeLoader';\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { getError, getIsLoading, getContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  PhoneContactTitle,\n  ContactListTitle,\n  Notice,\n} from './PhoneBook.styled';\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Box mb={4}>\n        <PhoneContactTitle>Phonebook</PhoneContactTitle>\n        <div>\n          <ContactForm />\n        </div>\n      </Box>\n\n      {contacts.length > 0 ? (\n        <div>\n          <Box display=\"flex\" mb={4} alignItems=\"center\">\n            <ContactListTitle>Contacts</ContactListTitle>\n            {isLoading && !error && <BeatLoader color={'#337ab7'} />}\n          </Box>\n          <div>\n            <Filter />\n            <ContactList />\n          </div>\n        </div>\n      ) : (\n        <Box display=\"flex\" justifyContent=\"center\">\n          {isLoading && !error ? (\n            <FadeLoader color={'#337ab7'} />\n          ) : (\n            <Notice>your contact list is empty</Notice>\n          )}\n        </Box>\n      )}\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport PhoneBook from 'components/PhoneBook';\n\nimport { useAuth } from 'hooks/hooks';\nimport { Container } from 'components/AppBar/AppBar.styled';\n\nconst Contacts = () => {\n  const { isLoggedIn } = useAuth();\n  return (\n    <>\n      <Container>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n        {isLoggedIn && <PhoneBook />}\n      </Container>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["letersRegex","numberRedex","Form","styled","Input","p","theme","space","colors","white","fontSizes","l","radii","normal","Wraper","LabelName","ErrorMessage","error","Button","getContacts","state","contacts","items","getFilters","filter","getIsLoading","isLoading","getError","ContactForm","dispatch","useDispatch","useSelector","useForm","defaultValues","name","number","register","reset","handleSubmit","errors","formState","onSubmit","data","map","toLowerCase","includes","toast","addContact","autoComplete","required","pattern","minLength","placeholder","autoFocus","type","tole","role","Item","List","fontWeight","bold","btnBg","btnHover","PhoneName","PhoneNumber","filtredContacts","id","style","color","Box","display","ml","width","onClick","contactId","deleteContact","ContactsTitleWrapper","InputText","onChange","e","changeFilter","target","value","PhoneContactTitle","ContactListTitle","Notice","shadows","noticeShadow","PhoneBook","useEffect","fetchContacts","mb","length","alignItems","justifyContent","isLoggedIn","useAuth","Helmet"],"sourceRoot":""}